{"version":3,"sources":["Todo/index.js","ToDoList/index.js","NewTodoForm/index.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","setDeleteIndex","setCompleteIndex","className","done","onClick","title","onMouseOver","event","target","innerHTML","onMouseLeave","parentNode","classList","add","setTimeout","remove","preventDefault","console","log","ToDoList","todos","map","NewTodoForm","setNewTodo","useState","userInput","setUserInput","value","placeholder","onChange","e","App","setTodos","newToDo","splice","removeTask","markAsDone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAEe,SAASA,EAAT,GAKX,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,eACAC,EACC,EADDA,iBAoBA,OACE,sBAAKC,UAAU,OAAf,UACE,mBAAGA,UAAWJ,EAAKK,KAAO,OAAS,UAAWC,QAP/B,WACjBH,EAAiBF,IAMf,SACGD,EAAKO,QAER,wBAAQH,UAAU,UAAUI,YAAa,SAACC,GAASA,EAAMC,OAAOC,UAAU,KAAMC,aAAc,SAACH,GAASA,EAAMC,OAAOC,UAAU,IAAML,QAtBtH,SAACG,GAClBA,EAAMC,OAAOG,WAAWC,UAAUC,IAAI,WAEtCC,YAAW,WACTP,EAAMC,OAAOG,WAAWC,UAAUG,OAAO,WACzCR,EAAMS,iBACNhB,EAAeD,KACf,KAEFkB,QAAQC,IAAInB,S,UCKDoB,EApBE,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOpB,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBAEzC,OAEE,qBAAKC,UAAU,kBAAf,SACGkB,EAAMC,KAAI,SAACvB,EAAMC,GAChB,OACE,cAACF,EAAD,CACEC,KAAMA,EACNE,eAAgBA,EAChBC,iBAAkBA,EAElBF,MAAOA,GADFA,SCeFuB,G,MA1BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAEJC,mBAAS,IAFL,mBAE/BC,EAF+B,KAEpBC,EAFoB,KAgBpC,OACI,iCAEI,uBAAOxB,UAAU,aAAayB,MAAOF,EAAWG,YAAY,iBAAiBC,SAAU,SAACC,GAAD,OAAOJ,EAAaI,EAAEtB,OAAOmB,UACpH,wBAAQvB,QAfK,SAAC0B,GAElBA,EAAEd,iBAKFO,EAJgB,CACZlB,MAAOoB,EACPtB,MAAM,IAGVuB,EAAa,KAOT,sBCaGK,MA/Bf,WAAgB,IAAD,EACWP,mBAAS,IADpB,mBACRJ,EADQ,KACDY,EADC,KAiBb,OACE,sBAAK9B,UAAU,MAAf,UAEE,uDACA,cAAC,EAAD,CAAaqB,WAlBE,SAACU,GAClBD,EAAS,GAAD,mBAAKZ,GAAL,CAAYa,QAkBlB,cAAC,EAAD,CACEb,MAAOA,EACPpB,eAAgB,SAACD,GAAD,OAjBH,SAACA,GAClBqB,EAAMc,OAAOnC,EAAO,GACpBiC,EAAS,YAAIZ,IAekBe,CAAWpC,IACtCE,iBAAkB,SAACF,GAAD,OAbL,SAACA,GAClBqB,EAAMrB,GAAOI,MAAOiB,EAAMrB,GAAOI,KACjC6B,EAAS,YAAIZ,IAWoBgB,CAAWrC,UClBjCsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3aba344c.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nexport default function Todo({\r\n  todo,\r\n  index,\r\n  setDeleteIndex,\r\n  setCompleteIndex,\r\n}) {\r\n\r\n  const removeToDo = (event) => {\r\n    event.target.parentNode.classList.add(\"opacity\");\r\n  \r\n    setTimeout(() => { \r\n      event.target.parentNode.classList.remove(\"opacity\")\r\n      event.preventDefault();\r\n      setDeleteIndex(index);\r\n    },300);\r\n\r\n    console.log(index)\r\n    \r\n  };\r\n  const markAsDone = () => {\r\n    setCompleteIndex(index);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <p className={todo.done ? \"done\" : \"notDone\"} onClick={markAsDone}>\r\n        {todo.title}\r\n      </p>\r\n      <button className=\"buttond\" onMouseOver={(event)=>{event.target.innerHTML=\"X\"}} onMouseLeave={(event)=>{event.target.innerHTML=\"\"}}  onClick={removeToDo }></button>\r\n    </div>\r\n  );\r\n}\r\n","import Todo from \"../Todo\";\r\nimport './style.css';\r\n\r\nconst ToDoList = ({ todos, setDeleteIndex, setCompleteIndex }) => {\r\n\r\n  return (\r\n    \r\n    <div className=\"todos-container\">\r\n      {todos.map((todo, index) => {\r\n        return (\r\n          <Todo\r\n            todo={todo}\r\n            setDeleteIndex={setDeleteIndex}\r\n            setCompleteIndex={setCompleteIndex}\r\n            key={index}\r\n            index={index}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import './style.css';\r\nimport { useState } from 'react';\r\n\r\nconst NewTodoForm = ({ setNewTodo }) => {\r\n    \r\n    let [userInput, setUserInput] = useState(\"\");\r\n\r\n\r\n    const handleClick =  (e) => {\r\n\r\n        e.preventDefault();\r\n        const newTask = {\r\n            title: userInput,\r\n            done: false\r\n        } \r\n        setNewTodo(newTask);\r\n        setUserInput(\"\");\r\n      };\r\n\r\n    return (\r\n        <form>\r\n\r\n            <input className=\"inputfield\" value={userInput} placeholder=\"Add a new task\" onChange={(e) => setUserInput(e.target.value) }></input>\r\n            <button onClick={handleClick}>Add</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewTodoForm;","import \"./App.css\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport { useState } from \"react\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\n\r\nfunction App() {\r\n  let [todos, setTodos] = useState([]);\r\n\r\n  const updateTodo = (newToDo) => {\r\n    setTodos([...todos, newToDo]);\r\n  };\r\n\r\n  const removeTask = (index) => {\r\n    todos.splice(index, 1);\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  const markAsDone = (index) => {\r\n    todos[index].done = todos[index].done ? false : true;\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <h1>THE AMAZING TODO-LIST</h1>\r\n      <NewTodoForm setNewTodo={updateTodo} />\r\n      <ToDoList  \r\n        todos={todos}\r\n        setDeleteIndex={(index) => removeTask(index)}\r\n        setCompleteIndex={(index) => markAsDone(index)}\r\n      />    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}